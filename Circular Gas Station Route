// you have a truck that is moving around a circular track with gas stations spaced out at some distance between them. Each station has a finite amount of gas, the distance between the gas stations requires a certain amount of gas to traverse and you can only move in one direction. What is the algorithm to use, which gas station to start, so that you can move around the whole gas station?

public int gasStation(int[] gas, int[] cost) {
        int size = gas.length;
        int i;
        for(i = 0; i<size; i++ ){
            int save = 0; 
            int position = i; 
            boolean flag = false; // Flag represents if we have iterated through the end of the list 
            
            while(true){
                save = save + gas[position]-cost[position];
                
                if(save<0){
                    if(flag==true){
                        return -1;
                    }else{
                        if(i==size-1) return -1; 
                        i = position+1;
                        break; 
                    }
                       
                }else{
                    if(flag == true && position>=i){
                        return i;
                    }else if(flag == false && position == size-1){
                        flag = true;
                        position = 0; 
                    }else{
                        position++;
                    }
                }
            }
        }
        
        return i; 
        
    }
